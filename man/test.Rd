% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load-dev.R
\name{test}
\alias{test}
\title{Run package tests and show test coverage results}
\usage{
test(
  filter = NULL,
  path = ".",
  test_dir = "tests/testthat",
  reporter = NULL,
  clean = FALSE,
  local_install = TRUE,
  show_coverage = TRUE,
  report = FALSE,
  show_report = report && interactive(),
  lcov_info = NULL,
  github_summary = NULL
)
}
\arguments{
\item{filter}{Regular expression to filter both the test files (via the
\code{filter} argument of \code{\link[testthat:test_dir]{testthat::test_dir()}}), and the source files
in the coverage results.}

\item{path}{Path to the package tree.}

\item{test_dir}{Test directory to use. Defaults to \code{tests/testthat}
within the package tree.}

\item{reporter}{The testthat reporter to use. Passed to
\code{\link[testthat:test_dir]{testthat::test_dir()}}.}

\item{clean}{Whether to delete the build directory before the build.}

\item{local_install}{Whether to install the built package into a local
library and add that library to the beginning of the library path.}

\item{show_coverage}{Whether to show code coverage results.}

\item{report}{Whether to generate a HTML test coverage report.}

\item{show_report}{Whether to show the HTML test coverage
report (if \code{report} is \code{TRUE}).}

\item{lcov_info}{Whether to create an lcov info file, see
\code{\link[=lcov]{lcov()}}. Defaults to the value of the
uncovr_lcov_info option, then the
R_UNCOVR_LCOV_INFO environment variable, or if neither
are set, then TRUE.}

\item{github_summary}{Whether to generate a markdown summary in
\verb{$GITHUB_STEP_SUMMARY}. It defaults to \code{FALSE}, except if running on
GitHub Actions.}
}
\value{
A list of class \code{package_coverage} with entries:
\itemize{
\item \code{setup}: Build setup, see \code{\link[=reload]{reload()}}.
\item \code{plan}: Build plan, see \code{\link[=reload]{reload()}}.
\item \code{load}: Return value of \code{\link[pkgload:load_all]{pkgload::load_all()}}.
\item \code{coverage}: Code coverage results. Columns:
\itemize{
\item \code{path}: Relative path to the R code file.
\item \code{symbol}: The R variable that is used to collect the coverage for
this file.
\item \code{line_count}: Total number of lines in the file.
\item \code{code_lines}: Number of code lines (that are not excluded).
\item \code{lines_covered}: The number of covered lines will be stored here
after a test coverage run. For \code{reload()} it is all zero.
\item \code{percent_covered}: The test coverage percentage of the file will
be stored here after a test coverage run. For \code{reload()} it is
all zero.
\item \code{lines}: A list column with a data frame for each file. The data
frame has columns:
\itemize{
\item \code{lines}: The code line.
\item \code{status}: Whether this line is \code{"instrumented"}, \code{"noncode"} or
\code{"excluded"}.
\item \code{id} The id of the counter that applies to this line. Often the
same as the line number, but not always, e.g. for multi-line
expressions. \code{NA} for lines that are not \code{"instrumented"}.
\item \code{coverage}: The number of times the line was covered will be filled
in here after a test coverage run. For \code{reload()} it is zero,
but \code{NA} for lines that are not \code{"instrumented"}.
}
}
\item \code{test_results}: Return value of \code{\link[testthat:test_dir]{testthat::test_dir()}}.
}
}
\description{
Run package tests and show test coverage results
}
\details{
Performs the following steps:
\itemize{
\item Builds the package in a build directory, or updates the most recent
build, if there is one.
\item Loads the package from the build directory using \code{\link[pkgload:load_all]{pkgload::load_all()}}.
\item Installs the package into a local library (by default).
\item Runs the package tests.
\item Calculates and shows the test coverage of the package's source files.
}
}
